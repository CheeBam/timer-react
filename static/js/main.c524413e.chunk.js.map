{"version":3,"sources":["components/parts/Chart.jsx","actions/timer.js","styles/index.js","helpers/constants.js","serviceWorker.js","reducers/timerReducer.js","actions/task.js","reducers/taskReducer.js","reducers/index.js","sagas/task.js","sagas/index.js","components/parts/Timer.jsx","components/parts/Dialog.jsx","components/parts/Task.jsx","components/parts/Log.jsx","components/Main.jsx","components/Info.jsx","components/NotFound.jsx","App.js","index.js","middleware/localStorage.js","helpers/index.js"],"names":["Chart","state","chartData","calculateData","list","_this","props","setState","buildChartData","generateEvents","_this$props","addToLog","clearLog","date","DateTime","fromObject","hour","GENERATE_START_HOUR","i","getRandom","GENERATE_MIN_TASKS","GENERATE_MAX_TASKS","interval","GENERATE_MIN_INTERVAL","GENERATE_MAX_INTERVAL","minutes","GENERATE_MIN_DURATION","GENERATE_MAX_DURATION","start","plus","end","id","name","concat","toISO","duration","diff","toObject","setImmediate","this","classes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_5__","recharts__WEBPACK_IMPORTED_MODULE_7__","width","height","recharts__WEBPACK_IMPORTED_MODULE_8__","data","margin","top","right","left","bottom","recharts__WEBPACK_IMPORTED_MODULE_9__","dataKey","recharts__WEBPACK_IMPORTED_MODULE_10__","recharts__WEBPACK_IMPORTED_MODULE_11__","recharts__WEBPACK_IMPORTED_MODULE_12__","type","fill","barSize","recharts__WEBPACK_IMPORTED_MODULE_13__","verticalAlign","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_17___default","container","item","xs","className","chartButtonContainer","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_16___default","variant","size","button","onClick","Component","connect","timer","dispatch","addLogAction","clearLogAction","withStyles","styles","__webpack_require__","d","__webpack_exports__","CREATE_ITEM","ITEM_SET_NAME","ADD_TO_LOG","DELETE_FROM_LOG","CLEAR_LOG","createItemAction","setNameAction","deleteFromLogAction","payload","object","background","color","padding","mainContainer","paddingRight","paddingLeft","marginRight","marginLeft","mainTabList","flexGrow","backgroundColor","mainTab","fontWeight","fontSize","timerClock","taskWrapper","textAlign","infoCard","marginTop","infoFooter","justifyContent","logRow","logCell","paddingTop","paddingBottom","marginBottom","dialogTitle","dialogButton","infoPreloader","CHART_START_HOUR","CHART_END_HOUR","MINUTES_IN_HOUR","Boolean","window","location","hostname","match","INITIAL_STATE","GET_TASK","GET_TASK_LOADING","GET_TASK_SUCCESS","GET_TASK_FAILED","CLEAR_TASK","loading","success","failed","rootReducer","combineReducers","arguments","length","undefined","action","Object","objectSpread","toConsumableArray","filter","task","getTask","root","delay","ms","Promise","res","setTimeout","getList","regenerator_default","wrap","_context","prev","next","put","call","select","sent","find","t0","stop","_marked","_context2","all","takeLatest","_marked2","fork","sagas_marked","Timer","classCallCheck","possibleConstructorReturn","getPrototypeOf","time","Duration","fromMillis","intervalId","started","runner","prevProps","clearInterval","value","_this2","setInterval","addSecond","react_default","Fab_default","toFormat","PureComponent","MyDialog","open","closeDialog","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","disableTypography","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","autoFocus","Task","dialog","onChangeName","e","changeName","target","onStartClick","createItem","getNextId","local","onStopClick","fromISO","openDialog","renderButton","diffInMillis","diffNow","Math","abs","valueOf","_this$state","Grid_default","spacing","justify","parts_Dialog","Input_default","onChange","parts_Timer","Log","destroy","deleteFromLog","Fragment","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","component","Link","to","Main","getCurrentTab","_this$props$match$par","params","tab","renderTab","parts_Log","react","parts_Task","lg","md","Tabs_default","Tab_default","label","Info","clearTask","_this$props2","src","alt","Redirect","Card_default","CardActionArea_default","CardHeader_default","title","Divider_default","CardContent_default","Typography_default","CardActions_default","renderInfo","NotFound","App","BrowserRouter","Switch","Route","exact","path","sagaMiddleware","createSagaMiddleware","preloadedState","initialState","JSON","parse","localStorage","getItem","error","console","startup","store","createStore","composeWithDevTools","applyMiddleware","setItem","stringify","push","removeItem","run","rootSaga","ReactDOM","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","luxon__WEBPACK_IMPORTED_MODULE_0__","_constants__WEBPACK_IMPORTED_MODULE_1__","result","sort","b","pop","min","max","floor","random","intervals","Interval","fromDateTimes","newHours","_loop","sum","startHour","minute","second","endHour","currentHourInterval","found","int","intersection","forEach","el"],"mappings":"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","file":"static/js/main.c524413e.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { ResponsiveContainer, BarChart, Bar, CartesianGrid, XAxis, YAxis, Legend } from 'recharts';\nimport { DateTime } from 'luxon';\n\nimport { withStyles } from '@material-ui/core/styles/index';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport styles from '../../styles';\nimport { clearLogAction, addLogAction } from '../../actions/timer';\n\nimport { getRandom, buildChartData } from '../../helpers';\nimport { GENERATE_MIN_DURATION, GENERATE_MAX_DURATION, GENERATE_MIN_INTERVAL, GENERATE_MAX_INTERVAL, GENERATE_MIN_TASKS, GENERATE_MAX_TASKS, GENERATE_START_HOUR}  from '../../helpers/constants';\n\nclass Chart extends Component {\n\n    state = {\n        chartData: [],\n    };\n\n    componentDidMount() {\n        this.calculateData();\n    }\n\n    calculateData = () => {\n        const { list } = this.props;\n\n        this.setState({\n            chartData: buildChartData(list),\n        })\n    };\n\n    generateEvents = () => {\n        const { addToLog, clearLog } = this.props;\n\n        clearLog();\n\n        let date = DateTime.fromObject({ hour: GENERATE_START_HOUR });\n\n        for (let i = 1; i < getRandom(GENERATE_MIN_TASKS, GENERATE_MAX_TASKS); i++) {\n            const interval = getRandom(GENERATE_MIN_INTERVAL, GENERATE_MAX_INTERVAL);\n            const minutes = getRandom(GENERATE_MIN_DURATION, GENERATE_MAX_DURATION);\n            const start = date.plus({ minutes: interval });\n            const end = start.plus({ minutes });\n            date = date.plus({ minutes: minutes + interval });\n\n            const item = {\n                id: i,\n                name: `item${i}`,\n                start: start.toISO(),\n                end: end.toISO(),\n                duration: end.diff(start, ['hours', 'minutes', 'seconds']).toObject(),\n            };\n\n            addToLog(item);\n        }\n\n        setImmediate(() => { this.calculateData() });\n    };\n\n    render() {\n        const { chartData } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <Fragment>\n                <ResponsiveContainer width='100%' height={300}>\n                    <BarChart data={chartData} margin={{ top: 20, right: 30, left: 0, bottom: 0 }}>>\n                        <XAxis dataKey='hour' />\n                        <YAxis />\n                        <CartesianGrid/>\n                        <Bar type='monotone' dataKey='value' name='Minutes in this hours' fill='#3248C7' barSize={30} />\n                        <Legend verticalAlign='bottom' />\n                    </BarChart>\n                </ResponsiveContainer>\n                <Grid container>\n                    <Grid item xs={12} className={classes.chartButtonContainer}>\n                        <Button variant='contained' size='small' className={classes.button} onClick={this.generateEvents}>\n                            Generate\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Fragment>\n        );\n    }\n}\nexport default connect(\n    (state) => ({\n        list: state.timer.list,\n    }),\n    (dispatch) => ({\n        addToLog: (item) => dispatch(addLogAction(item)),\n        clearLog: (item) => dispatch(clearLogAction()),\n    })\n    )(withStyles(styles)(Chart));\n","export const CREATE_ITEM = 'CREATE_ITEM';\nexport const ITEM_SET_NAME = 'ITEM_SET_NAME';\nexport const ADD_TO_LOG = 'ADD_TO_LOG';\nexport const DELETE_FROM_LOG = 'DELETE_FROM_LOG';\nexport const CLEAR_LOG = 'CLEAR_LOG';\nexport const GET_LOG = 'GET_LOG';\n\nexport function createItemAction(item) {\n    return { type: CREATE_ITEM, payload: item }\n}\n\nexport function setNameAction(name) {\n    return { type: ITEM_SET_NAME, payload: name }\n}\n\nexport function addLogAction(object) {\n    return { type: ADD_TO_LOG, payload: object }\n}\n\nexport function deleteFromLogAction(id) {\n    return { type: DELETE_FROM_LOG, payload: id }\n}\n\nexport function clearLogAction() {\n    return { type: CLEAR_LOG }\n}\n\n\n\n\n\n","export default {\n    button: {\n        background: '#fff',\n        color: '#3f51b5',\n        padding: '5px',\n    },\n    mainContainer: {\n        width: '100%',\n        paddingRight: '15px',\n        paddingLeft: '15px',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n    },\n    mainTabList: {\n        flexGrow: 1,\n        backgroundColor: '#02BCD4',\n        width: '100%',\n        color: '#fff',\n    },\n    mainTab: {\n        fontWeight: 600,\n        fontSize: 'small',\n    },\n    timerClock: {\n        background: '#fff',\n        color: '#3f51b5',\n        fontWeight: 900,\n        fontSize: 'x-large',\n        padding: '65px 80px 90px',\n        margin: '20px',\n    },\n    taskWrapper: {\n        margin: '10px 0 25px 0',\n        textAlign: 'center',\n    },\n    infoCard: {\n        marginTop: 20,\n        textAlign: 'left',\n    },\n    infoFooter: {\n        justifyContent: 'center',\n    },\n    logRow: {\n        background: '#EAF6FF',\n    },\n    logCell: {\n        textAlign: 'center',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        color: '#3f51b5',\n    },\n    chartButtonContainer: {\n        textAlign: 'right',\n        marginBottom: 30,\n    },\n    dialogTitle: {\n        color: '#ff0000',\n    },\n    dialogButton: {\n        color: '#0EBFD7',\n    },\n    infoPreloader: {\n        marginTop: 50,\n    }\n};\n","export const CHART_START_HOUR = 0;\nexport const CHART_END_HOUR = 23;\nexport const MINUTES_IN_HOUR = 60;\n\nexport const GENERATE_MIN_TASKS = 10;\nexport const GENERATE_MAX_TASKS = 15;\nexport const GENERATE_MIN_DURATION = 10;\nexport const GENERATE_MAX_DURATION = 90;\nexport const GENERATE_MIN_INTERVAL = 10;\nexport const GENERATE_MAX_INTERVAL = 50;\nexport const GENERATE_START_HOUR = 4;\n\nexport const ActionTypes = {\n    GET_TASK_SUCCESS: 'GET_TASK_SUCCESS',\n    GET_TASK_FAILURE: 'GET_TASK_FAILURE',\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CREATE_ITEM, ITEM_SET_NAME, ADD_TO_LOG, DELETE_FROM_LOG, CLEAR_LOG } from '../actions/timer';\n\nexport const INITIAL_STATE = {\n    item: {\n        id: 0,\n        name: '',\n        start: null,\n        end: null,\n        duration: null,\n    },\n    list: [],\n};\n\nexport default function timerReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case CREATE_ITEM:\n            return {\n                item: action.payload,\n                list: state.list,\n            };\n        case ITEM_SET_NAME:\n            return {\n                item: {\n                    ...state.item,\n                    name: action.payload,\n                },\n                list: state.list,\n            };\n        case ADD_TO_LOG:\n            return {\n                item: INITIAL_STATE.item,\n                list: [ ...state.list, action.payload ],\n            };\n        case DELETE_FROM_LOG:\n            return {\n                item: state.item,\n                list: state.list.filter(item => item.id !== action.payload),\n            };\n        case CLEAR_LOG:\n            return {\n                item: state.item,\n                list: INITIAL_STATE.list,\n            };\n        default: return state;\n    }\n\n};\n","export const GET_TASK = 'GET_TASK';\nexport const GET_TASK_LOADING = 'GET_TASK_LOADING';\nexport const GET_TASK_SUCCESS = 'GET_TASK_SUCCESS';\nexport const GET_TASK_FAILED = 'GET_TASK_FAILED';\nexport const CLEAR_TASK = 'CLEAR_TASK';\n\nexport function getTask(id) {\n    return { type: GET_TASK, payload: id }\n}\n\nexport function getTaskSuccess(item) {\n    return { type: GET_TASK_SUCCESS, payload: item }\n}\n\nexport function getTaskLoading() {\n    return { type: GET_TASK_LOADING }\n}\n\nexport function getTaskError(error) {\n    return { type: GET_TASK_FAILED, payload: error }\n}\n\nexport function clearTask() {\n    return { type: CLEAR_TASK }\n}\n\n\n","import { GET_TASK, GET_TASK_SUCCESS, GET_TASK_LOADING, GET_TASK_FAILED, CLEAR_TASK } from '../actions/task';\n\nexport const INITIAL_STATE = {\n    loading: false,\n    success: false,\n    failed: false,\n    item: {\n        id: 0,\n        name: null,\n        start: null,\n        end: null,\n        duration: null,\n    },\n};\n\nexport default function taskReducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n\n        case GET_TASK_LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n\n        case GET_TASK_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                failed: false,\n                item: action.payload,\n            };\n\n        case GET_TASK_FAILED:\n            return {\n                loading: false,\n                success: false,\n                failed: true,\n                item: action.payload,\n            };\n\n        case GET_TASK:\n            return state;\n\n        case CLEAR_TASK:\n            return INITIAL_STATE;\n\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport timer from './timerReducer';\nimport task from './taskReducer';\n\nconst rootReducer = combineReducers({\n    timer,\n    task,\n});\n\nexport default rootReducer;\n","/**\n * @module Sagas/Task\n * @desc Task\n */\n\nimport { all, call, put, takeLatest, select } from 'redux-saga/effects';\n\nimport { GET_TASK, GET_TASK_LOADING, GET_TASK_SUCCESS, GET_TASK_FAILED} from '../actions/task';\n\nconst delay = (ms) => new Promise(res => setTimeout(res, ms));\n\nconst getList = state => state.timer.list;\n/**\n * getTask\n */\nexport function* getTask(data) {\n    try {\n        yield put({\n            type: GET_TASK_LOADING,\n        });\n\n        yield call(delay, 1000);\n        const list = yield select(getList);\n\n        const task = list.find(item => item.id === +data.payload);\n\n        if (task) {\n            yield put({\n                type: GET_TASK_SUCCESS,\n                payload: task,\n            });\n        } else {\n            yield put({\n                type: GET_TASK_FAILED,\n                payload: 404,\n            });\n        }\n    } catch (err) {\n        yield put({\n            type: GET_TASK_FAILED,\n            payload: err,\n        });\n    }\n}\n\n/**\n * Task Sagas\n */\nexport default function* root() {\n    yield all([\n        takeLatest(GET_TASK, getTask),\n    ]);\n};\n","import { all, fork } from 'redux-saga/effects';\n\nimport task from './task';\n\n/**\n * rootSaga\n */\nexport default function* root() {\n    yield all([fork(task)]);\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Duration } from 'luxon';\n\nimport Fab from '@material-ui/core/Fab';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport styles from '../../styles';\n\nclass Timer extends PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            time: Duration.fromMillis(props.duration ? props.duration : 0),\n            intervalId: null,\n        };\n    }\n\n    static propTypes = {\n        started: PropTypes.bool.isRequired,\n        duration: PropTypes.number,\n    };\n\n    componentDidMount() {\n        const { started } = this.props;\n        this.runner(started);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { started } = this.props;\n        if (started !== prevProps.started) {\n            this.runner(started);\n        }\n    }\n\n    componentWillUnmount() {\n        const { intervalId } = this.state;\n\n        clearInterval(intervalId);\n    }\n\n    runner(value) {\n        const { intervalId } = this.state;\n\n        if (value) {\n            const interval = setInterval(() => {\n                this.addSecond();\n            }, 1000);\n            this.setState({\n                intervalId: interval,\n            })\n        } else {\n            clearInterval(intervalId);\n            this.setState({\n                time: Duration.fromMillis(0),\n            });\n        }\n    }\n\n\n    addSecond() {\n        const { time } = this.state;\n        this.setState({\n            time: time.plus(Duration.fromMillis(1000)),\n        });\n    }\n\n    state = {\n        time: null,\n    };\n\n    render() {\n        const { time } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <Fab variant=\"round\" className={classes.timerClock}>\n                { time.toFormat('hh:mm:ss') }\n            </Fab>\n        );\n    }\n} export default withStyles(styles)(Timer);\n","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../../styles';\n\nclass MyDialog extends Component {\n\n    static propTypes = {\n        open: PropTypes.bool.isRequired,\n    };\n\n    render() {\n        const { open, closeDialog, classes } = this.props;\n\n        return (\n            <Dialog\n                open={ open }\n                onClose={ closeDialog() }\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogTitle id='alert-dialog-title' disableTypography={true}><h2 className={classes.dialogTitle}>Empty task name</h2></DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='alert-dialog-description'>\n                        You are trying close your task without name, enter the title and try again!\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={ closeDialog() } className={classes.dialogButton} autoFocus>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\nexport default withStyles(styles)(MyDialog);\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nimport { DateTime } from 'luxon';\n\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../../styles';\nimport Timer from './Timer';\nimport MyDialog from './Dialog';\nimport { setNameAction, addLogAction, createItemAction } from '../../actions/timer';\nimport { getNextId } from '../../helpers';\n\nclass Task extends Component {\n\n    constructor(props) {\n        super();\n        const { timer: { item } } = props;\n\n        if (item && item.id !== 0) {\n            const diffInMillis = DateTime.fromISO(item.start).diffNow('millisecond');\n            this.state = {\n                started: true,\n                duration: Math.abs(diffInMillis.valueOf()),\n                name: item.name,\n                dialog: false,\n            }\n        }\n    }\n\n    state = {\n        name: '',\n        started: false,\n        duration: 0,\n        dialog: false,\n    };\n\n    onChangeName = (e) => {\n        const { changeName } = this.props;\n\n        this.setState({\n            name: e.target.value,\n        });\n\n        changeName(e.target.value);\n    };\n\n    onStartClick = () => {\n        const { name } = this.state;\n        const { createItem } = this.props;\n\n        this.setState({\n            started: true,\n        });\n\n        const item = {\n            id: getNextId(),\n            start: DateTime.local().toISO(),\n            name,\n            end: null,\n            duration: null,\n        };\n\n        createItem(item);\n    };\n\n    onStopClick = () => {\n        const { name } = this.state;\n        const { addToLog, timer: { item } } = this.props;\n\n        if (!name) {\n            this.openDialog();\n        } else {\n\n            this.setState({\n                started: false,\n                name: '',\n            });\n\n            const end = DateTime.local();\n            const timer = {\n                id: item.id,\n                name,\n                start: item.start,\n                end: end.toISO(),\n                duration: end.diff(DateTime.fromISO(item.start), ['hours', 'minutes', 'seconds']).toObject(),\n            };\n\n            addToLog(timer);\n        }\n    };\n\n    closeDialog = () => {\n        return () => {\n            this.setState({dialog: false});\n        }\n    };\n\n    openDialog = () => {\n        this.setState({dialog: true});\n    };\n\n    renderButton = (started) => {\n        const { classes } = this.props;\n\n        return (\n            <Button className={classes.button} variant='contained' size='small' onClick={started ? this.onStopClick : this.onStartClick}>\n                { started ? 'Stop' : 'Start' }\n            </Button>\n        );\n    };\n\n    render() {\n        const { started, duration, name, dialog } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <Grid container spacing={8} justify={'center'} className={classes.taskWrapper}>\n                <MyDialog open={dialog} closeDialog={this.closeDialog}/>\n                <Grid item xs={12}>\n                    <Input className=\"taskInput\" value={name} name={'timerName'} onChange={this.onChangeName}/>\n                </Grid>\n                <Grid item xs={12}>\n                    <Timer started={started} duration={duration}/>\n                </Grid>\n                <Grid item xs={12}>\n                    { this.renderButton(started) }\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        timer: state.timer,\n    }),\n    (dispatch) => ({\n        changeName: (name) => dispatch(setNameAction(name)),\n        addToLog: (item) => dispatch(addLogAction(item)),\n        createItem: (item) => dispatch(createItemAction(item)),\n    }))(withStyles(styles)(Task));\n","import React, {PureComponent} from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect} from 'react-redux';\n\nimport { DateTime } from 'luxon';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../../styles';\nimport { deleteFromLogAction } from '../../actions/timer';\n\nclass Log extends PureComponent {\n\n    destroy = (id) => {\n        return () => {\n            const { deleteFromLog } = this.props;\n            deleteFromLog(id);\n        }\n    };\n\n    render() {\n        const { classes, list } = this.props;\n\n        return (\n            <React.Fragment>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align='center'>№</TableCell>\n                            <TableCell align='center'>Task</TableCell>\n                            <TableCell align='center'>Time Start</TableCell>\n                            <TableCell align='center'>Time End</TableCell>\n                            <TableCell align='center'>Time Spend</TableCell>\n                            <TableCell align='center'>Info</TableCell>\n                            <TableCell align='center'>Delete</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        { list.map(row => (\n                            <TableRow className={classes.logRow} key={row.id}>\n                                <TableCell className={classes.logCell}>{row.id}</TableCell>\n                                <TableCell className={classes.logCell}>{row.name}</TableCell>\n                                <TableCell className={classes.logCell}>{DateTime.fromISO(row.start).toFormat('HH:mm:ss')}</TableCell>\n                                <TableCell className={classes.logCell}>{DateTime.fromISO(row.end).toFormat('HH:mm:ss')}</TableCell>\n                                <TableCell className={classes.logCell}>{DateTime.fromObject(row.duration).toFormat('HH:mm:ss')}</TableCell>\n                                <TableCell className={classes.logCell}>\n                                    <Button\n                                        className={classes.button}\n                                        variant='contained'\n                                        component={Link}\n                                        to={`/tasks/${row.id}`}\n                                    >\n                                        Info\n                                    </Button>\n                                </TableCell>\n                                <TableCell align='center'><Button className={classes.button} variant='contained' size='small' onClick={this.destroy(row.id)}>Delete</Button></TableCell>\n                            </TableRow>\n                        )) }\n                    </TableBody>\n                </Table>\n            </React.Fragment>\n        );\n    }\n\n} export default connect(\n    (state) => ({\n        list: state.timer.list,\n    }),\n    (dispatch) => ({\n        deleteFromLog: (item) => dispatch(deleteFromLogAction(item)),\n    }))(withStyles(styles)(Log));\n","import React, { Component , Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../styles';\nimport Task from './parts/Task';\nimport Log from './parts/Log';\nimport Chart from './parts/Chart';\n\nclass Main extends Component {\n\n    getCurrentTab = () => {\n        const { match: { params: { tab = 'log' }} } = this.props;\n        return tab;\n    };\n\n    renderTab = () => {\n        const tab = this.getCurrentTab();\n\n        switch (tab) {\n            case 'log':\n                return <Log/>;\n            case 'chart':\n                return <Chart/>;\n            default:\n                return '';\n        }\n\n    };\n\n    render() {\n        const { classes } = this.props;\n        const tab = this.getCurrentTab();\n        return (\n            <Fragment>\n                <Task/>\n                <Grid container spacing={8} justify={'center'} className={classes.mainContainer}>\n                    <Grid container spacing={8} lg={1} md={0}/>\n                    <Grid container spacing={8} lg={9} md={12}>\n                        <Tabs value={tab} className={classes.mainTabList} variant='fullWidth'>\n                            <Tab className={classes.mainTab} label='Tasks log' value='log' component={Link} to='/log'/>\n                            <Tab className={classes.mainTab} label='Tasks chart' value='chart' component={Link} to='/chart'/>\n                        </Tabs>\n                        { this.renderTab() }\n                    </Grid>\n                    <Grid container spacing={8} lg={1} md={0}/>\n                </Grid>\n            </Fragment>\n        )\n    }\n\n} export default withStyles(styles)(Main);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { DateTime } from 'luxon';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../styles';\nimport { getTask, clearTask } from '../actions/task';\n\nclass Info extends PureComponent {\n\n    componentDidMount() {\n        const { match, getTask } = this.props;\n\n        if (match.params.id) {\n            getTask(match.params.id)\n        }\n    }\n\n    componentWillUnmount() {\n        const { clearTask } = this.props;\n\n        clearTask()\n    }\n\n    renderInfo() {\n        const { task, classes } = this.props;\n        const { item } = task;\n\n        if (task.loading) {\n            return (\n                <div className={classes.infoPreloader}>\n                    <img src='/ring.svg' alt=\"\" height={100} />\n                </div>\n            )\n        } else if (task.failed && item === 404) {\n            return (\n                <Redirect to='/404' />\n            )\n        } else if (task.success) {\n            return (\n                <Card className={classes.infoCard}>\n                    <CardActionArea>\n                        <CardHeader title={item.name} align='center'/>\n                        <Divider/>\n                        <CardContent>\n                            <React.Fragment>\n                                <Typography variant='h6' component='h5'>\n                                    ID: {item.id}\n                                </Typography>\n                                <Typography variant='h6' component='h5'>\n                                    Start: {DateTime.fromISO(item.start).toFormat('HH:mm:ss')}\n                                </Typography>\n                                <Typography variant='h6' component='h5'>\n                                    End: {DateTime.fromISO(item.end).toFormat('HH:mm:ss')}\n                                </Typography>\n                                <Typography variant='h6' component='h5'>\n                                    Duration: {DateTime.fromObject(item.duration || {}).toFormat('HH:mm:ss')}\n                                </Typography>\n                            </React.Fragment>\n                        </CardContent>\n                        <Divider/>\n                    </CardActionArea>\n\n                    <CardActions className={classes.infoFooter}>\n                        <Button\n                            className={classes.button}\n                            variant='contained'\n                            component={Link}\n                            to={'/log'}\n                        >\n                            Back\n                        </Button>\n                    </CardActions>\n            </Card>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <Grid container justify={'center'}>\n                { this.renderInfo() }\n            </Grid>\n        )\n    }\n}\nexport default connect(\n    (state) => ({\n        task: state.task,\n    }), (dispatch) => ({\n        getTask: (id) => dispatch(getTask(id)),\n        clearTask: () => dispatch(clearTask()),\n    }))(withStyles(styles)(Info));\n","import React, {PureComponent} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../styles';\n\nclass NotFound extends PureComponent {\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div align='center'>\n                <h2>404 - Not found</h2>\n\n                <Button\n                    className={classes.button}\n                    variant='contained'\n                    component={Link}\n                    to={'/log'}\n                >\n                    Back\n                </Button>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(NotFound);\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Main from './components/Main';\nimport Info from './components/Info';\nimport NotFound from './components/NotFound';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path='/404' component={NotFound}/>\n                    <Route path='/tasks/:id' component={Info}/>\n                    <Route path='/:tab?' component={Main} />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { DateTime } from 'luxon';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport localStorageMiddleware from './middleware/localStorage';\nimport rootReducer  from './reducers';\nimport rootSaga  from './sagas';\n\nimport './index.css';\nimport App from './App';\n\nconst startup = () => {\n    const initialState = {\n        timer: {\n            item: {\n                id: 0,\n                name: '',\n                start: null,\n                end: null,\n                duration: null,\n            },\n            list: [],\n        }\n    };\n\n    try {\n        const item = JSON.parse(localStorage.getItem('item'));\n        if (item) {\n            const diffInMillis = DateTime.fromISO(item.start).diffNow('millisecond');\n            initialState.timer.item = {\n                id: item.id,\n                name: localStorage.getItem('name') || '',\n                start: item.start,\n                duration: Math.abs(diffInMillis.valueOf()),\n            };\n        }\n\n        const list = JSON.parse(localStorage.getItem('list')) || [];\n        initialState.timer.list = list.map(item => ({\n            id: item.id,\n            name: item.name,\n            start: item.start,\n            end: item.end,\n            duration: item.duration,\n        }));\n\n        return initialState;\n    } catch (error) {\n        console.error('startup', error);\n    }\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst preloadedState = startup();\n\nconst store = createStore(\n    rootReducer,\n    preloadedState,\n    composeWithDevTools(applyMiddleware(localStorageMiddleware(), sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { CREATE_ITEM, ITEM_SET_NAME, ADD_TO_LOG, DELETE_FROM_LOG, CLEAR_LOG } from '../actions/timer';\n\nexport default () => () => next => action => {\n    if (action.type) {\n        switch (action.type) {\n            case CREATE_ITEM: {\n                localStorage.setItem('item', JSON.stringify(action.payload));\n                break;\n            }\n            case ADD_TO_LOG: {\n                const list = JSON.parse(localStorage.getItem('list')) || [];\n                list.push(action.payload);\n                localStorage.removeItem('item');\n                localStorage.removeItem('name');\n                localStorage.setItem('list', JSON.stringify(list));\n                break;\n            }\n            case DELETE_FROM_LOG: {\n                let list = JSON.parse(localStorage.getItem('list'));\n                if (list) {\n                    list = list.filter(item => item.id !== action.payload);\n                    localStorage.setItem('list', JSON.stringify(list));\n                }\n                break;\n            }\n            case ITEM_SET_NAME: {\n                const item = JSON.parse(localStorage.getItem('item'));\n                if (item) {\n                    item.name = action.payload;\n                    localStorage.setItem('item', JSON.stringify(item));\n                }\n                localStorage.setItem('name', action.payload || '');\n                break;\n            }\n            case CLEAR_LOG: {\n                localStorage.removeItem('list');\n                break;\n            }\n            default:\n                break;\n        }\n    }\n\n    return next(action);\n};\n","import { DateTime, Interval } from 'luxon';\nimport { CHART_START_HOUR, CHART_END_HOUR, MINUTES_IN_HOUR } from './constants';\n\nexport const getNextId = () => {\n    const list = JSON.parse(localStorage.getItem('list'));\n    let result = 1;\n    if (list) {\n        list.sort((a, b) => a.id - b.id);\n        result = ++list.pop().id;\n    }\n    return result;\n};\n\nexport const getRandom = (min = 0, max) => {\n    return Math.floor(Math.random() * (max-min) + min + 1);\n};\n\nexport const buildChartData = (list) => {\n\n    const intervals = list.map(item => {\n        const start = DateTime.fromISO(item.start);\n        const end = DateTime.fromISO(item.end);\n        return {\n            id: item.id,\n            interval: Interval.fromDateTimes(start, end),\n            start: start,\n            end: end,\n        }\n    });\n\n    let newHours = [];\n    for (let hour = CHART_START_HOUR; hour <= CHART_END_HOUR; hour++) {\n        let sum = 0;\n        const startHour = DateTime.fromObject({ hour, minute: 0, second: 0});\n        const endHour = DateTime.fromObject({ hour, minute: 59, second: 59});\n        const currentHourInterval = Interval.fromDateTimes(startHour, endHour);\n        const found = intervals.filter(int => currentHourInterval.intersection(int.interval));\n        if (found.length > 0) {\n            let duration = MINUTES_IN_HOUR;\n            found.forEach((el) => {\n                if (el.end.hour === hour && el.start.hour === hour) {\n                    duration = el.end.diff(el.start, ['minutes']).toObject().minutes;\n                } else if (el.end.hour === hour) {\n                    duration = el.end.minute;\n                } else if (el.start.hour === hour) {\n                    duration = MINUTES_IN_HOUR - el.start.minute;\n                }\n                sum += duration;\n            });\n        }\n        newHours.push({\n            hour,\n            value: sum > MINUTES_IN_HOUR ? MINUTES_IN_HOUR : sum,\n        });\n    }\n\n    return newHours;\n};\n\nexport default {\n    getNextId,\n    getRandom,\n    buildChartData,\n}\n"],"sourceRoot":""}