{"version":3,"sources":["styles/images/ring.svg","styles/index.js","components/parts/Timer.jsx","components/parts/Dialog.jsx","actions/timer.js","helpers/constants.js","helpers/index.js","components/parts/Task.jsx","components/parts/Log.jsx","components/parts/Chart.jsx","components/Main.jsx","actions/task.js","components/Info.jsx","components/NotFound.jsx","App.js","middleware/localStorage.js","reducers/timerReducer.js","reducers/taskReducer.js","reducers/index.js","sagas/task.js","sagas/index.js","initializeStore.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","src_styles","button","background","color","padding","mainContainer","width","paddingRight","paddingLeft","marginRight","marginLeft","mainTabList","flexGrow","backgroundColor","mainTab","fontWeight","fontSize","timerClock","margin","taskWrapper","textAlign","infoCard","marginTop","infoFooter","justifyContent","logRow","logCell","paddingTop","paddingBottom","chartButtonContainer","marginBottom","dialogTitle","dialogButton","infoPreloader","Timer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","time","duration","Duration","fromMillis","intervalId","started","runner","prevProps","clearInterval","value","_this2","interval","setInterval","addSecond","setState","plus","classes","react_default","a","createElement","Fab_default","variant","className","toFormat","PureComponent","defaultProps","withStyles","styles","open","closeDialog","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","id","disableTypography","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","onClick","autoFocus","CREATE_ITEM","CREATE_LOG","ITEM_SET_NAME","ADD_TO_LOG","DELETE_FROM_LOG","CLEAR_LOG","GENERATE_MIN_TASKS","GENERATE_MAX_TASKS","GENERATE_MIN_DURATION","GENERATE_MAX_DURATION","GENERATE_MIN_INTERVAL","GENERATE_MAX_INTERVAL","GENERATE_START_HOUR","getNextId","list","JSON","parse","localStorage","getItem","result","sort","b","pop","getRandom","min","arguments","length","undefined","max","Math","floor","random","buildChartData","intervals","map","item","start","DateTime","fromISO","end","Interval","fromDateTimes","newHours","_loop","hour","sum","startHour","fromObject","minute","second","endHour","currentHourInterval","found","filter","int","intersection","forEach","el","diff","toObject","minutes","push","Task","name","dialog","onChangeName","e","changeName","target","onStartClick","createItem","local","toISO","onStopClick","_this$props","addToLog","timer","openDialog","renderButton","size","diffInMillis","diffNow","abs","valueOf","_this$state","Grid_default","container","spacing","justify","xs","parts_Dialog","Input_default","onChange","parts_Timer","Component","connect","dispatch","type","payload","setNameAction","createItemAction","Log","destroy","deleteFromLog","Fragment","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","row","key","component","Link","to","concat","Chart","generateEvents","createLog","clearLog","date","i","_this$props2","react","ResponsiveContainer","height","BarChart","data","top","right","left","bottom","XAxis","dataKey","YAxis","CartesianGrid","Bar","fill","barSize","Legend","verticalAlign","createLogAction","tab","_props$match$params$t","match","params","getCurrentTab","parts_Task","lg","md","Tabs_default","Tab_default","label","parts_Log","parts_Chart","renderTab","GET_TASK","GET_TASK_LOADING","GET_TASK_SUCCESS","GET_TASK_FAILED","CLEAR_TASK","Info","getTask","clearTask","task","loading","src","ring","alt","success","Card_default","CardActionArea_default","CardHeader_default","title","Divider_default","CardContent_default","Typography_default","CardActions_default","Redirect","renderInfo","App","Switch","Route","exact","path","NotFound","Main","middleware_localStorage","next","action","setItem","stringify","removeItem","INITIAL_STATE","failed","rootReducer","combineReducers","objectSpread","toConsumableArray","root","delay","ms","Promise","res","setTimeout","getList","regenerator_default","wrap","_context","prev","select","sent","find","put","Error","t0","stop","_marked","_context2","all","takeLatest","_marked2","fork","sagas_marked","init","initialState","error","console","Boolean","window","location","hostname","store","sagaMiddleware","createSagaMiddleware","preloadedState","createStore","composeWithDevTools","applyMiddleware","localStorageMiddleware","run","rootSaga","initializeStore","hashHistory","createHashHistory","basename","process","ReactDOM","render","es","Router","history","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64239da2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ring.4d1881e7.svg\";","export default {\n  button: {\n    background: '#fff',\n    color: '#3f51b5',\n    padding: '5px',\n  },\n  mainContainer: {\n    width: '100%',\n    paddingRight: '15px',\n    paddingLeft: '15px',\n    marginRight: 'auto',\n    marginLeft: 'auto',\n  },\n  mainTabList: {\n    flexGrow: 1,\n    backgroundColor: '#02BCD4',\n    width: '100%',\n    color: '#fff',\n  },\n  mainTab: {\n    fontWeight: 600,\n    fontSize: 'small',\n  },\n  timerClock: {\n    background: '#fff',\n    color: '#3f51b5',\n    fontWeight: 900,\n    fontSize: 'x-large',\n    padding: '65px 80px 90px',\n    margin: '20px',\n  },\n  taskWrapper: {\n    margin: '10px 0 25px 0',\n    textAlign: 'center',\n  },\n  infoCard: {\n    marginTop: 20,\n    textAlign: 'left',\n  },\n  infoFooter: {\n    justifyContent: 'center',\n  },\n  logRow: {\n    background: '#EAF6FF',\n  },\n  logCell: {\n    textAlign: 'center',\n    paddingTop: '10px',\n    paddingBottom: '10px',\n    color: '#3f51b5',\n  },\n  chartButtonContainer: {\n    textAlign: 'right',\n    marginBottom: 30,\n  },\n  dialogTitle: {\n    color: '#ff0000',\n  },\n  dialogButton: {\n    color: '#0EBFD7',\n  },\n  infoPreloader: {\n    marginTop: 50,\n  },\n};\n","import React, { PureComponent } from 'react';\n// eslint-disable-next-line\nimport PropTypes from 'prop-types';\n\nimport { Duration } from 'luxon';\n\nimport Fab from '@material-ui/core/Fab';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../../styles';\n\nclass Timer extends PureComponent {\n  static propTypes = {\n    started: PropTypes.bool.isRequired,\n    duration: PropTypes.number,\n  };\n\n  static defaultProps = {\n    duration: 0,\n  };\n\n  constructor(props) {\n    super(props);\n    const { duration } = props;\n\n    this.state = {\n      time: Duration.fromMillis(duration),\n      intervalId: null,\n    };\n  }\n\n  state = {\n    time: null,\n  };\n\n  componentDidMount() {\n    const { started } = this.props;\n    this.runner(started);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { started } = this.props;\n    if (started !== prevProps.started) {\n      this.runner(started);\n    }\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n\n    clearInterval(intervalId);\n  }\n\n  runner(value) {\n    const { intervalId } = this.state;\n\n    if (value) {\n      const interval = setInterval(() => {\n        this.addSecond();\n      }, 1000);\n      this.setState({\n        intervalId: interval,\n      });\n    } else {\n      clearInterval(intervalId);\n      this.setState({\n        time: Duration.fromMillis(0),\n      });\n    }\n  }\n\n  addSecond() {\n    const { time } = this.state;\n    this.setState({\n      time: time.plus(Duration.fromMillis(1000)),\n    });\n  }\n\n  render() {\n    const { time } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <Fab variant=\"round\" className={classes.timerClock}>\n        {time.toFormat('hh:mm:ss')}\n      </Fab>\n    );\n  }\n}\nexport default withStyles(styles)(Timer);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n// eslint-disable-next-line\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../../styles';\n\nconst MyDialog = props => {\n  const { open, closeDialog, classes } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={closeDialog()}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\" disableTypography>\n        <h2 className={classes.dialogTitle}>Empty task name</h2>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          You are trying close your task without name, enter the title and try\n          again!\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={closeDialog()}\n          className={classes.dialogButton}\n          autoFocus\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nMyDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles)(MyDialog);\n","export const CREATE_ITEM = 'CREATE_ITEM';\nexport const CREATE_LOG = 'CREATE_LOG';\nexport const ITEM_SET_NAME = 'ITEM_SET_NAME';\nexport const ADD_TO_LOG = 'ADD_TO_LOG';\nexport const DELETE_FROM_LOG = 'DELETE_FROM_LOG';\nexport const CLEAR_LOG = 'CLEAR_LOG';\n\nexport function createItemAction(item) {\n  return { type: CREATE_ITEM, payload: item };\n}\n\nexport function createLogAction(list) {\n  return { type: CREATE_LOG, payload: list };\n}\n\nexport function setNameAction(name) {\n  return { type: ITEM_SET_NAME, payload: name };\n}\n\nexport function addLogAction(object) {\n  return { type: ADD_TO_LOG, payload: object };\n}\n\nexport function deleteFromLogAction(id) {\n  return { type: DELETE_FROM_LOG, payload: id };\n}\n\nexport function clearLogAction() {\n  return { type: CLEAR_LOG };\n}\n","export const CHART_START_HOUR = 0;\nexport const CHART_END_HOUR = 23;\nexport const MINUTES_IN_HOUR = 60;\n\nexport const GENERATE_MIN_TASKS = 10;\nexport const GENERATE_MAX_TASKS = 15;\nexport const GENERATE_MIN_DURATION = 10;\nexport const GENERATE_MAX_DURATION = 90;\nexport const GENERATE_MIN_INTERVAL = 10;\nexport const GENERATE_MAX_INTERVAL = 50;\nexport const GENERATE_START_HOUR = 4;\n","import { DateTime, Interval } from 'luxon';\nimport { CHART_START_HOUR, CHART_END_HOUR, MINUTES_IN_HOUR } from './constants';\n\nexport const getNextId = () => {\n  const list = JSON.parse(localStorage.getItem('list'));\n  let result = 1;\n  if (list) {\n    list.sort((a, b) => a.id - b.id);\n    result = list.pop().id + 1;\n  }\n  return result;\n};\n\nexport const getRandom = (min = 0, max) => {\n  return Math.floor(Math.random() * (max - min) + min + 1);\n};\n\nexport const buildChartData = list => {\n  const intervals = list.map(item => {\n    const start = DateTime.fromISO(item.start);\n    const end = DateTime.fromISO(item.end);\n    return {\n      id: item.id,\n      interval: Interval.fromDateTimes(start, end),\n      start,\n      end,\n    };\n  });\n\n  const newHours = [];\n  for (let hour = CHART_START_HOUR; hour <= CHART_END_HOUR; hour + 1) {\n    let sum = 0;\n    const startHour = DateTime.fromObject({ hour, minute: 0, second: 0 });\n    const endHour = DateTime.fromObject({ hour, minute: 59, second: 59 });\n    const currentHourInterval = Interval.fromDateTimes(startHour, endHour);\n    const found = intervals.filter(int =>\n      currentHourInterval.intersection(int.interval)\n    );\n    if (found.length > 0) {\n      let duration = MINUTES_IN_HOUR;\n      found.forEach(el => {\n        if (el.end.hour === hour && el.start.hour === hour) {\n          duration = el.end.diff(el.start, ['minutes']).toObject().minutes;\n        } else if (el.end.hour === hour) {\n          duration = el.end.minute;\n        } else if (el.start.hour === hour) {\n          duration = MINUTES_IN_HOUR - el.start.minute;\n        }\n        sum += duration;\n      });\n    }\n    newHours.push({\n      hour,\n      value: sum > MINUTES_IN_HOUR ? MINUTES_IN_HOUR : sum,\n    });\n  }\n\n  return newHours;\n};\n\nexport default {\n  getNextId,\n  getRandom,\n  buildChartData,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { DateTime } from 'luxon';\n\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../../styles';\nimport Timer from './Timer';\nimport MyDialog from './Dialog';\nimport {\n  setNameAction,\n  addLogAction,\n  createItemAction,\n} from '../../actions/timer';\nimport { getNextId } from '../../helpers';\n\nclass Task extends Component {\n  constructor(props) {\n    super();\n    const {\n      timer: { item },\n    } = props;\n\n    if (item && item.id !== 0) {\n      const diffInMillis = DateTime.fromISO(item.start).diffNow('millisecond');\n      this.state = {\n        started: true,\n        duration: Math.abs(diffInMillis.valueOf()),\n        name: item.name,\n        dialog: false,\n      };\n    }\n  }\n\n  state = {\n    name: '',\n    started: false,\n    duration: 0,\n    dialog: false,\n  };\n\n  onChangeName = e => {\n    const { changeName } = this.props;\n\n    this.setState({\n      name: e.target.value,\n    });\n\n    changeName(e.target.value);\n  };\n\n  onStartClick = () => {\n    const { name } = this.state;\n    const { createItem } = this.props;\n\n    this.setState({\n      started: true,\n    });\n\n    const item = {\n      id: getNextId(),\n      start: DateTime.local().toISO(),\n      name,\n      end: null,\n      duration: null,\n    };\n\n    createItem(item);\n  };\n\n  onStopClick = () => {\n    const { name } = this.state;\n    const {\n      addToLog,\n      timer: { item },\n    } = this.props;\n\n    if (!name) {\n      this.openDialog();\n    } else {\n      this.setState({\n        started: false,\n        name: '',\n      });\n\n      const end = DateTime.local();\n      const timer = {\n        id: item.id,\n        name,\n        start: item.start,\n        end: end.toISO(),\n        duration: end\n          .diff(DateTime.fromISO(item.start), ['hours', 'minutes', 'seconds'])\n          .toObject(),\n      };\n\n      addToLog(timer);\n    }\n  };\n\n  closeDialog = () => {\n    return () => {\n      this.setState({ dialog: false });\n    };\n  };\n\n  openDialog = () => {\n    this.setState({ dialog: true });\n  };\n\n  renderButton = started => {\n    const { classes } = this.props;\n\n    return (\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        size=\"small\"\n        onClick={started ? this.onStopClick : this.onStartClick}\n      >\n        {started ? 'Stop' : 'Start'}\n      </Button>\n    );\n  };\n\n  render() {\n    const { started, duration, name, dialog } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <Grid\n        container\n        spacing={8}\n        justify=\"center\"\n        className={classes.taskWrapper}\n      >\n        <Grid item xs={12}>\n          <MyDialog open={dialog} closeDialog={this.closeDialog} />\n        </Grid>\n        <Grid item xs={12}>\n          <Input\n            className=\"taskInput\"\n            value={name}\n            name=\"timerName\"\n            onChange={this.onChangeName}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Timer started={started} duration={duration} />\n        </Grid>\n        <Grid item xs={12}>\n          {this.renderButton(started)}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    timer: state.timer,\n  }),\n  dispatch => ({\n    changeName: name => dispatch(setNameAction(name)),\n    addToLog: item => dispatch(addLogAction(item)),\n    createItem: item => dispatch(createItemAction(item)),\n  })\n)(withStyles(styles)(Task));\n","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { DateTime } from 'luxon';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../../styles';\nimport { deleteFromLogAction } from '../../actions/timer';\n\nclass Log extends PureComponent {\n  destroy = id => {\n    return () => {\n      const { deleteFromLog } = this.props;\n      deleteFromLog(id);\n    };\n  };\n\n  render() {\n    const { classes, list } = this.props;\n\n    return (\n      <React.Fragment>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">№</TableCell>\n              <TableCell align=\"center\">Task</TableCell>\n              <TableCell align=\"center\">Time Start</TableCell>\n              <TableCell align=\"center\">Time End</TableCell>\n              <TableCell align=\"center\">Time Spend</TableCell>\n              <TableCell align=\"center\">Info</TableCell>\n              <TableCell align=\"center\">Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {list.map(row => (\n              <TableRow className={classes.logRow} key={row.id}>\n                <TableCell className={classes.logCell}>{row.id}</TableCell>\n                <TableCell className={classes.logCell}>{row.name}</TableCell>\n                <TableCell className={classes.logCell}>\n                  {DateTime.fromISO(row.start).toFormat('HH:mm:ss')}\n                </TableCell>\n                <TableCell className={classes.logCell}>\n                  {DateTime.fromISO(row.end).toFormat('HH:mm:ss')}\n                </TableCell>\n                <TableCell className={classes.logCell}>\n                  {DateTime.fromObject(row.duration).toFormat('HH:mm:ss')}\n                </TableCell>\n                <TableCell className={classes.logCell}>\n                  <Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    component={Link}\n                    to={`/tasks/${row.id}`}\n                  >\n                    Info\n                  </Button>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Button\n                    className={classes.button}\n                    variant=\"contained\"\n                    size=\"small\"\n                    onClick={this.destroy(row.id)}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\nexport default connect(\n  state => ({\n    list: state.timer.list,\n  }),\n  dispatch => ({\n    deleteFromLog: item => dispatch(deleteFromLogAction(item)),\n  })\n)(withStyles(styles)(Log));\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Legend,\n} from 'recharts';\nimport { DateTime } from 'luxon';\n\nimport { withStyles } from '@material-ui/core/styles/index';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport styles from '../../styles';\nimport { clearLogAction, createLogAction } from '../../actions/timer';\n\nimport { getRandom, buildChartData } from '../../helpers';\nimport {\n  GENERATE_MIN_DURATION,\n  GENERATE_MAX_DURATION,\n  GENERATE_MIN_INTERVAL,\n  GENERATE_MAX_INTERVAL,\n  GENERATE_MIN_TASKS,\n  GENERATE_MAX_TASKS,\n  GENERATE_START_HOUR,\n} from '../../helpers/constants';\n\nclass Chart extends Component {\n  generateEvents = () => {\n    const { createLog, clearLog } = this.props;\n\n    clearLog();\n\n    let date = DateTime.fromObject({ hour: GENERATE_START_HOUR });\n    const list = [];\n\n    for (\n      let i = 1;\n      i < getRandom(GENERATE_MIN_TASKS, GENERATE_MAX_TASKS);\n      i += 1\n    ) {\n      const interval = getRandom(GENERATE_MIN_INTERVAL, GENERATE_MAX_INTERVAL);\n      const minutes = getRandom(GENERATE_MIN_DURATION, GENERATE_MAX_DURATION);\n      const start = date.plus({ minutes: interval });\n      const end = start.plus({ minutes });\n      date = date.plus({ minutes: minutes + interval });\n\n      const item = {\n        id: i,\n        name: `item${i}`,\n        start: start.toISO(),\n        end: end.toISO(),\n        duration: end.diff(start, ['hours', 'minutes', 'seconds']).toObject(),\n      };\n\n      list.push(item);\n    }\n\n    createLog(list);\n  };\n\n  render() {\n    const { classes, list } = this.props;\n\n    return (\n      <Fragment>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart\n            data={buildChartData(list)}\n            margin={{ top: 20, right: 30, left: 0, bottom: 0 }}\n          >\n            <XAxis dataKey=\"hour\" />\n            <YAxis />\n            <CartesianGrid />\n            <Bar\n              type=\"monotone\"\n              dataKey=\"value\"\n              name=\"Minutes in this hours\"\n              fill=\"#3248C7\"\n              barSize={30}\n            />\n            <Legend verticalAlign=\"bottom\" />\n          </BarChart>\n        </ResponsiveContainer>\n        <Grid container>\n          <Grid item xs={12} className={classes.chartButtonContainer}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              className={classes.button}\n              onClick={this.generateEvents}\n            >\n              Generate\n            </Button>\n          </Grid>\n        </Grid>\n      </Fragment>\n    );\n  }\n}\nexport default connect(\n  state => ({\n    list: state.timer.list,\n  }),\n  dispatch => ({\n    createLog: list => dispatch(createLogAction(list)),\n    clearLog: () => dispatch(clearLogAction()),\n  })\n)(withStyles(styles)(Chart));\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../styles';\nimport Task from './parts/Task';\nimport Log from './parts/Log';\nimport Chart from './parts/Chart';\n\nconst getCurrentTab = props => {\n  const {\n    match: {\n      params: { tab = 'log' },\n    },\n  } = props;\n  return tab;\n};\n\nconst renderTab = tab => {\n  switch (tab) {\n    case 'log':\n      return <Log />;\n    case 'chart':\n      return <Chart />;\n    default:\n      return '';\n  }\n};\n\nconst Main = props => {\n  const { classes } = props;\n  const tab = getCurrentTab(props);\n  return (\n    <Fragment>\n      <Task />\n      <Grid\n        container\n        spacing={8}\n        justify=\"center\"\n        className={classes.mainContainer}\n      >\n        <Grid item lg={1} />\n        <Grid item lg={9} md={12} xs={12}>\n          <Tabs value={tab} className={classes.mainTabList} variant=\"fullWidth\">\n            <Tab\n              className={classes.mainTab}\n              label=\"Tasks log\"\n              value=\"log\"\n              component={Link}\n              to=\"/log\"\n            />\n            <Tab\n              className={classes.mainTab}\n              label=\"Tasks chart\"\n              value=\"chart\"\n              component={Link}\n              to=\"/chart\"\n            />\n          </Tabs>\n          {renderTab(tab)}\n        </Grid>\n        <Grid item lg={1} />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(Main);\n","export const GET_TASK = 'GET_TASK';\nexport const GET_TASK_LOADING = 'GET_TASK_LOADING';\nexport const GET_TASK_SUCCESS = 'GET_TASK_SUCCESS';\nexport const GET_TASK_FAILED = 'GET_TASK_FAILED';\nexport const CLEAR_TASK = 'CLEAR_TASK';\n\nexport function getTask(id) {\n  return { type: GET_TASK, payload: id };\n}\n\nexport function getTaskSuccess(item) {\n  return { type: GET_TASK_SUCCESS, payload: item };\n}\n\nexport function getTaskLoading() {\n  return { type: GET_TASK_LOADING };\n}\n\nexport function getTaskError(error) {\n  return { type: GET_TASK_FAILED, payload: error };\n}\n\nexport function clearTask() {\n  return { type: CLEAR_TASK };\n}\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { DateTime } from 'luxon';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../styles';\nimport ring from '../styles/images/ring.svg';\nimport { getTask, clearTask } from '../actions/task';\n\nclass Info extends PureComponent {\n  componentDidMount() {\n    const { match, getTask } = this.props;\n\n    if (match.params.id) {\n      getTask(match.params.id);\n    }\n  }\n\n  componentWillUnmount() {\n    const { clearTask } = this.props;\n\n    clearTask();\n  }\n\n  renderInfo() {\n    const { task, classes } = this.props;\n    const { item } = task;\n\n    if (task.loading) {\n      return (\n        <div className={classes.infoPreloader}>\n          <img src={ring} alt=\"\" height={100} />\n        </div>\n      );\n    }\n\n    if (task.success) {\n      return (\n        <Card className={classes.infoCard}>\n          <CardActionArea>\n            <CardHeader title={item.name} align=\"center\" />\n            <Divider />\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h5\">\n                ID: {item.id}\n              </Typography>\n              <Typography variant=\"h6\" component=\"h5\">\n                Start: {DateTime.fromISO(item.start).toFormat('HH:mm:ss')}\n              </Typography>\n              <Typography variant=\"h6\" component=\"h5\">\n                End: {DateTime.fromISO(item.end).toFormat('HH:mm:ss')}\n              </Typography>\n              <Typography variant=\"h6\" component=\"h5\">\n                Duration:{' '}\n                {DateTime.fromObject(item.duration || {}).toFormat('HH:mm:ss')}\n              </Typography>\n            </CardContent>\n            <Divider />\n          </CardActionArea>\n\n          <CardActions className={classes.infoFooter}>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              component={Link}\n              to=\"/log\"\n            >\n              Back\n            </Button>\n          </CardActions>\n        </Card>\n      );\n    }\n\n    return <Redirect to=\"/404\" />;\n  }\n\n  render() {\n    return (\n      <Grid container justify=\"center\">\n        {this.renderInfo()}\n      </Grid>\n    );\n  }\n}\nexport default connect(\n  state => ({\n    task: state.task,\n  }),\n  dispatch => ({\n    getTask: id => dispatch(getTask(id)),\n    clearTask: () => dispatch(clearTask()),\n  })\n)(withStyles(styles)(Info));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from '../styles';\n\nconst NotFound = props => {\n  const { classes } = props;\n  return (\n    <div align=\"center\">\n      <h2>404 - Not found</h2>\n\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        component={Link}\n        to=\"/log\"\n      >\n        Back\n      </Button>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(NotFound);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Main from './components/Main';\nimport Info from './components/Info';\nimport NotFound from './components/NotFound';\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/404\" component={NotFound} />\n    <Route path=\"/tasks/:id\" component={Info} />\n    <Route path=\"/:tab?\" component={Main} />\n  </Switch>\n);\n\nexport default App;\n","import {\n  CREATE_ITEM,\n  CREATE_LOG,\n  ITEM_SET_NAME,\n  ADD_TO_LOG,\n  DELETE_FROM_LOG,\n  CLEAR_LOG,\n} from '../actions/timer';\n\nexport default () => () => next => action => {\n  if (action.type) {\n    switch (action.type) {\n      case CREATE_ITEM: {\n        localStorage.setItem('item', JSON.stringify(action.payload));\n        break;\n      }\n      case CREATE_LOG: {\n        localStorage.setItem('list', JSON.stringify(action.payload));\n        break;\n      }\n      case ADD_TO_LOG: {\n        const list = JSON.parse(localStorage.getItem('list')) || [];\n        list.push(action.payload);\n        localStorage.removeItem('item');\n        localStorage.removeItem('name');\n        localStorage.setItem('list', JSON.stringify(list));\n        break;\n      }\n      case DELETE_FROM_LOG: {\n        let list = JSON.parse(localStorage.getItem('list'));\n        if (list) {\n          list = list.filter(item => item.id !== action.payload);\n          localStorage.setItem('list', JSON.stringify(list));\n        }\n        break;\n      }\n      case ITEM_SET_NAME: {\n        const item = JSON.parse(localStorage.getItem('item'));\n        if (item) {\n          item.name = action.payload;\n          localStorage.setItem('item', JSON.stringify(item));\n        }\n        localStorage.setItem('name', action.payload || '');\n        break;\n      }\n      case CLEAR_LOG: {\n        localStorage.removeItem('list');\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  return next(action);\n};\n","import {\n  CREATE_ITEM,\n  CREATE_LOG,\n  ITEM_SET_NAME,\n  ADD_TO_LOG,\n  DELETE_FROM_LOG,\n  CLEAR_LOG,\n} from '../actions/timer';\n\nexport const INITIAL_STATE = {\n  item: {\n    id: 0,\n    name: '',\n    start: null,\n    end: null,\n    duration: null,\n  },\n  list: [],\n};\n\nexport default function timerReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case CREATE_ITEM:\n      return {\n        item: action.payload,\n        list: state.list,\n      };\n    case CREATE_LOG:\n      return {\n        item: state.item,\n        list: action.payload,\n      };\n    case ITEM_SET_NAME:\n      return {\n        item: {\n          ...state.item,\n          name: action.payload,\n        },\n        list: state.list,\n      };\n    case ADD_TO_LOG:\n      return {\n        item: INITIAL_STATE.item,\n        list: [...state.list, action.payload],\n      };\n    case DELETE_FROM_LOG:\n      return {\n        item: state.item,\n        list: state.list.filter(item => item.id !== action.payload),\n      };\n    case CLEAR_LOG:\n      return {\n        item: state.item,\n        list: INITIAL_STATE.list,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_TASK_SUCCESS,\n  GET_TASK_LOADING,\n  GET_TASK_FAILED,\n  CLEAR_TASK,\n} from '../actions/task';\n\nexport const INITIAL_STATE = {\n  loading: true,\n  success: false,\n  failed: false,\n  item: {\n    id: 0,\n    name: null,\n    start: null,\n    end: null,\n    duration: null,\n  },\n};\n\nexport default function taskReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case GET_TASK_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case GET_TASK_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        failed: false,\n        item: action.payload,\n      };\n\n    case GET_TASK_FAILED:\n      return {\n        loading: false,\n        success: false,\n        failed: true,\n        item: action.payload,\n      };\n\n    case CLEAR_TASK:\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport timer from './timerReducer';\nimport task from './taskReducer';\n\nconst rootReducer = combineReducers({\n  timer,\n  task,\n});\n\nexport default rootReducer;\n","/**\n * @module Sagas/Task\n * @desc Task\n */\n\nimport { all, call, put, takeLatest, select } from 'redux-saga/effects';\n\nimport { GET_TASK, GET_TASK_SUCCESS, GET_TASK_FAILED } from '../actions/task';\n\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nconst getList = state => state.timer.list;\n/**\n * getTask\n */\nexport function* getTask(data) {\n  try {\n    yield call(delay, 1000);\n    const list = yield select(getList);\n\n    const task = list.find(item => item.id === +data.payload);\n\n    if (task) {\n      yield put({\n        type: GET_TASK_SUCCESS,\n        payload: task,\n      });\n    } else {\n      throw new Error('404');\n    }\n  } catch (err) {\n    yield put({\n      type: GET_TASK_FAILED,\n      payload: err,\n    });\n  }\n}\n\n/**\n * Task Sagas\n */\nexport default function* root() {\n  yield all([takeLatest(GET_TASK, getTask)]);\n}\n","import { all, fork } from 'redux-saga/effects';\n\nimport task from './task';\n\n/**\n * rootSaga\n */\nexport default function* root() {\n  yield all([fork(task)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { DateTime } from 'luxon';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport localStorageMiddleware from './middleware/localStorage';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nimport './index.css';\n\nconst init = () => {\n  const initialState = {\n    timer: {\n      item: {\n        id: 0,\n        name: '',\n        start: null,\n        end: null,\n        duration: null,\n      },\n      list: [],\n    },\n  };\n\n  try {\n    const item = JSON.parse(localStorage.getItem('item'));\n    if (item) {\n      const diffInMillis = DateTime.fromISO(item.start).diffNow('millisecond');\n      initialState.timer.item = {\n        id: item.id,\n        name: localStorage.getItem('name') || '',\n        start: item.start,\n        duration: Math.abs(diffInMillis.valueOf()),\n      };\n    }\n\n    const list = JSON.parse(localStorage.getItem('list')) || [];\n    initialState.timer.list = list.map(el => ({\n      id: el.id,\n      name: el.name,\n      start: el.start,\n      end: el.end,\n      duration: el.duration,\n    }));\n\n    return initialState;\n  } catch (error) {\n    // eslint-disable-next-line\n    console.error('startup', error);\n    return initialState;\n  }\n};\n\nexport default function initializeStore() {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const preloadedState = init();\n\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    composeWithDevTools(\n      applyMiddleware(localStorageMiddleware(), sagaMiddleware)\n    )\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router';\nimport createHashHistory from 'history/createHashHistory';\n\nimport App from './App';\nimport initializeStore from './initializeStore';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = initializeStore();\n\nconst hashHistory = createHashHistory({ basename: process.env.PUBLIC_URL });\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={hashHistory}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}